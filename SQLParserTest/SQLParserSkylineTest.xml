<TestData>
  <TestDataRow>
    <comment>1 numerical preference</comment>
    <skylineSQL>
      <![CDATA[SELECT t1.id AS ID, t1.title, t1.price FROM cars_small t1 SKYLINE OF t1.price LOW]]>
    </skylineSQL>
    <parsePreferenceSQLSkylineSQLExpectedResult>
      <![CDATA[SELECT t1.id AS ID, t1.title, t1.price FROM cars_small t1 WHERE NOT EXISTS(SELECT t1_INNER.id AS ID, t1_INNER.title, t1_INNER.price FROM cars_small t1_INNER WHERE t1_INNER.price <= t1.price AND ( t1_INNER.price < t1.price) )]]>
    </parsePreferenceSQLSkylineSQLExpectedResult>
    <parsePreferenceSQLSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLLevel 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0 , t1.id AS ID, t1.title, t1.price FROM cars_small t1', 'LOW', 0]]>
    </parsePreferenceSQLSkylineBNLExpectedResult>
    <parsePreferenceSQLSkylineBNLSortExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLSortLevel 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0 , t1.id AS ID, t1.title, t1.price FROM cars_small t1 ORDER BY t1.price', 'LOW', 0]]>
    </parsePreferenceSQLSkylineBNLSortExpectedResult>
    <parsePreferenceSQLSkylineHexagonExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineHexagonLevel 'SELECT  DENSE_RANK() OVER (ORDER BY t1.price ASC)-1 AS Rankt1price , t1.id AS ID, t1.title, t1.price FROM cars_small t1', 'LOW', 0, 'SELECT  MAX(Rankt1price) FROM (SELECT  DENSE_RANK() OVER (ORDER BY t1.price ASC)-1 AS Rankt1price FROM cars_small t1) MyQuery']]>
    </parsePreferenceSQLSkylineHexagonExpectedResult>
    <parsePreferenceSQLSkylineDQExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineDQ 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0 , t1.id AS ID, t1.title, t1.price FROM cars_small t1', 'LOW',0]]>
    </parsePreferenceSQLSkylineDQExpectedResult>
    <parsePreferenceSQLMultipleSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_MultipleSkylineBNL 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0 , t1.id AS ID, t1.title, t1.price FROM cars_small t1 ORDER BY t1.price', 'LOW', 0, 3]]>
    </parsePreferenceSQLMultipleSkylineBNLExpectedResult>
  </TestDataRow>
  <TestDataRow>
    <comment>3 numerical preferences</comment>
    <skylineSQL>
      <![CDATA[   SELECT   * FROM cars_small t1 SKYLINE OF t1.price AROUND 10000, t1.mileage LOW, t1.horsepower HIGH]]>
    </skylineSQL>
    <parsePreferenceSQLSkylineSQLExpectedResult>
      <![CDATA[SELECT   * FROM cars_small t1 WHERE NOT EXISTS(SELECT   * FROM cars_small t1_INNER WHERE ABS(t1_INNER.price - 10000) <= ABS(t1.price - 10000) AND t1_INNER.mileage <= t1.mileage AND t1_INNER.horsepower * -1 <= t1.horsepower * -1 AND ( ABS(t1_INNER.price - 10000) < ABS(t1.price - 10000) OR t1_INNER.mileage < t1.mileage OR t1_INNER.horsepower * -1 < t1.horsepower * -1) )]]>
    </parsePreferenceSQLSkylineSQLExpectedResult>
    <parsePreferenceSQLSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLLevel 'SELECT  CAST(ABS(t1.price - 10000) AS bigint) AS SkylineAttribute0, CAST(t1.mileage AS bigint) AS SkylineAttribute1, CAST(t1.horsepower * -1 AS bigint) AS SkylineAttribute2 ,   * FROM cars_small t1', 'LOW;LOW;LOW', 0]]>
    </parsePreferenceSQLSkylineBNLExpectedResult>
    <parsePreferenceSQLSkylineBNLSortExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLSortLevel 'SELECT  CAST(ABS(t1.price - 10000) AS bigint) AS SkylineAttribute0, CAST(t1.mileage AS bigint) AS SkylineAttribute1, CAST(t1.horsepower * -1 AS bigint) AS SkylineAttribute2 ,   * FROM cars_small t1 ORDER BY ABS(t1.price - 10000), t1.mileage, t1.horsepower * -1', 'LOW;LOW;LOW', 0]]>
    </parsePreferenceSQLSkylineBNLSortExpectedResult>
    <parsePreferenceSQLSkylineHexagonExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineHexagonLevel 'SELECT  DENSE_RANK() OVER (ORDER BY ABS(t1.price - 10000))-1 AS Rankt1price, DENSE_RANK() OVER (ORDER BY t1.mileage ASC)-1 AS Rankt1mileage, DENSE_RANK() OVER (ORDER BY t1.horsepower DESC)-1 AS Rankt1horsepower ,   * FROM cars_small t1', 'LOW;LOW;LOW', 0, 'SELECT  MAX(Rankt1price), MAX(Rankt1mileage), MAX(Rankt1horsepower) FROM (SELECT  DENSE_RANK() OVER (ORDER BY ABS(t1.price - 10000))-1 AS Rankt1price, DENSE_RANK() OVER (ORDER BY t1.mileage ASC)-1 AS Rankt1mileage, DENSE_RANK() OVER (ORDER BY t1.horsepower DESC)-1 AS Rankt1horsepower FROM cars_small t1) MyQuery']]>
    </parsePreferenceSQLSkylineHexagonExpectedResult>
    <parsePreferenceSQLSkylineDQExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineDQ 'SELECT  CAST(ABS(t1.price - 10000) AS bigint) AS SkylineAttribute0, CAST(t1.mileage AS bigint) AS SkylineAttribute1, CAST(t1.horsepower * -1 AS bigint) AS SkylineAttribute2 ,   * FROM cars_small t1', 'LOW;LOW;LOW',0]]>
    </parsePreferenceSQLSkylineDQExpectedResult>
    <parsePreferenceSQLMultipleSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_MultipleSkylineBNL 'SELECT  CAST(ABS(t1.price - 10000) AS bigint) AS SkylineAttribute0, CAST(t1.mileage AS bigint) AS SkylineAttribute1, CAST(t1.horsepower * -1 AS bigint) AS SkylineAttribute2 ,   * FROM cars_small t1 ORDER BY ABS(t1.price - 10000), t1.mileage, t1.horsepower * -1', 'LOW;LOW;LOW', 0, 3]]>
    </parsePreferenceSQLMultipleSkylineBNLExpectedResult>
  </TestDataRow>
  <TestDataRow>
    <comment>6 numerical preferences with EQUAL STEPS</comment>
    <skylineSQL>
      <![CDATA[SELECT cars_small.price,cars_small.mileage,cars_small.horsepower,cars_small.enginesize,cars_small.consumption,cars_small.doors,colors.name,fuels.name,bodies.name,cars_small.title,makes.name,conditions.name FROM cars_small LEFT OUTER JOIN colors ON cars_small.color_id = colors.ID LEFT OUTER JOIN fuels ON cars_small.fuel_id = fuels.ID LEFT OUTER JOIN bodies ON cars_small.body_id = bodies.ID LEFT OUTER JOIN makes ON cars_small.make_id = makes.ID LEFT OUTER JOIN conditions ON cars_small.condition_id = conditions.ID SKYLINE OF cars_small.price LOW 3000 EQUAL, cars_small.mileage LOW 20000 EQUAL, cars_small.horsepower HIGH 20 EQUAL, cars_small.enginesize HIGH 1000 EQUAL, cars_small.consumption LOW 15 EQUAL, cars_small.doors HIGH ]]>
    </skylineSQL>
    <parsePreferenceSQLSkylineSQLExpectedResult>
      <![CDATA[SELECT cars_small.price,cars_small.mileage,cars_small.horsepower,cars_small.enginesize,cars_small.consumption,cars_small.doors,colors.name,fuels.name,bodies.name,cars_small.title,makes.name,conditions.name FROM cars_small LEFT OUTER JOIN colors ON cars_small.color_id = colors.ID LEFT OUTER JOIN fuels ON cars_small.fuel_id = fuels.ID LEFT OUTER JOIN bodies ON cars_small.body_id = bodies.ID LEFT OUTER JOIN makes ON cars_small.make_id = makes.ID LEFT OUTER JOIN conditions ON cars_small.condition_id = conditions.ID WHERE NOT EXISTS(SELECT cars_small_INNER.price,cars_small_INNER.mileage,cars_small_INNER.horsepower,cars_small_INNER.enginesize,cars_small_INNER.consumption,cars_small_INNER.doors,colors_INNER.name,fuels_INNER.name,bodies_INNER.name,cars_small_INNER.title,makes_INNER.name,conditions_INNER.name FROM cars_small cars_small_INNER LEFT OUTER JOIN colors colors_INNER ON cars_small_INNER.color_id = colors_INNER.ID LEFT OUTER JOIN fuels fuels_INNER ON cars_small_INNER.fuel_id = fuels_INNER.ID LEFT OUTER JOIN bodies bodies_INNER ON cars_small_INNER.body_id = bodies_INNER.ID LEFT OUTER JOIN makes makes_INNER ON cars_small_INNER.make_id = makes_INNER.ID LEFT OUTER JOIN conditions conditions_INNER ON cars_small_INNER.condition_id = conditions_INNER.ID WHERE cars_small_INNER.price / 3000 <= cars_small.price / 3000 AND cars_small_INNER.mileage / 20000 <= cars_small.mileage / 20000 AND cars_small_INNER.horsepower / 20 * -1 <= cars_small.horsepower / 20 * -1 AND cars_small_INNER.enginesize / 1000 * -1 <= cars_small.enginesize / 1000 * -1 AND cars_small_INNER.consumption / 15 <= cars_small.consumption / 15 AND cars_small_INNER.doors * -1 <= cars_small.doors * -1 AND ( cars_small_INNER.price / 3000 < cars_small.price / 3000 OR cars_small_INNER.mileage / 20000 < cars_small.mileage / 20000 OR cars_small_INNER.horsepower / 20 * -1 < cars_small.horsepower / 20 * -1 OR cars_small_INNER.enginesize / 1000 * -1 < cars_small.enginesize / 1000 * -1 OR cars_small_INNER.consumption / 15 < cars_small.consumption / 15 OR cars_small_INNER.doors * -1 < cars_small.doors * -1) )]]>
    </parsePreferenceSQLSkylineSQLExpectedResult>
    <parsePreferenceSQLSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLLevel 'SELECT  CAST(cars_small.price / 3000 AS bigint) AS SkylineAttribute0, CAST(cars_small.mileage / 20000 AS bigint) AS SkylineAttribute1, CAST(cars_small.horsepower / 20 * -1 AS bigint) AS SkylineAttribute2, CAST(cars_small.enginesize / 1000 * -1 AS bigint) AS SkylineAttribute3, CAST(cars_small.consumption / 15 AS bigint) AS SkylineAttribute4, CAST(cars_small.doors * -1 AS bigint) AS SkylineAttribute5 , cars_small.price,cars_small.mileage,cars_small.horsepower,cars_small.enginesize,cars_small.consumption,cars_small.doors,colors.name,fuels.name,bodies.name,cars_small.title,makes.name,conditions.name FROM cars_small LEFT OUTER JOIN colors ON cars_small.color_id = colors.ID LEFT OUTER JOIN fuels ON cars_small.fuel_id = fuels.ID LEFT OUTER JOIN bodies ON cars_small.body_id = bodies.ID LEFT OUTER JOIN makes ON cars_small.make_id = makes.ID LEFT OUTER JOIN conditions ON cars_small.condition_id = conditions.ID', 'LOW;LOW;LOW;LOW;LOW;LOW', 0]]>
    </parsePreferenceSQLSkylineBNLExpectedResult>
    <parsePreferenceSQLSkylineBNLSortExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLSortLevel 'SELECT  CAST(cars_small.price / 3000 AS bigint) AS SkylineAttribute0, CAST(cars_small.mileage / 20000 AS bigint) AS SkylineAttribute1, CAST(cars_small.horsepower / 20 * -1 AS bigint) AS SkylineAttribute2, CAST(cars_small.enginesize / 1000 * -1 AS bigint) AS SkylineAttribute3, CAST(cars_small.consumption / 15 AS bigint) AS SkylineAttribute4, CAST(cars_small.doors * -1 AS bigint) AS SkylineAttribute5 , cars_small.price,cars_small.mileage,cars_small.horsepower,cars_small.enginesize,cars_small.consumption,cars_small.doors,colors.name,fuels.name,bodies.name,cars_small.title,makes.name,conditions.name FROM cars_small LEFT OUTER JOIN colors ON cars_small.color_id = colors.ID LEFT OUTER JOIN fuels ON cars_small.fuel_id = fuels.ID LEFT OUTER JOIN bodies ON cars_small.body_id = bodies.ID LEFT OUTER JOIN makes ON cars_small.make_id = makes.ID LEFT OUTER JOIN conditions ON cars_small.condition_id = conditions.ID ORDER BY cars_small.price / 3000, cars_small.mileage / 20000, cars_small.horsepower / 20 * -1, cars_small.enginesize / 1000 * -1, cars_small.consumption / 15, cars_small.doors * -1', 'LOW;LOW;LOW;LOW;LOW;LOW', 0]]>
    </parsePreferenceSQLSkylineBNLSortExpectedResult>
    <parsePreferenceSQLSkylineHexagonExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineHexagonLevel 'SELECT  DENSE_RANK() OVER (ORDER BY cars_small.price / 3000 ASC)-1 AS Rankcars_smallprice, DENSE_RANK() OVER (ORDER BY cars_small.mileage / 20000 ASC)-1 AS Rankcars_smallmileage, DENSE_RANK() OVER (ORDER BY cars_small.horsepower / 20 DESC)-1 AS Rankcars_smallhorsepower, DENSE_RANK() OVER (ORDER BY cars_small.enginesize / 1000 DESC)-1 AS Rankcars_smallenginesize, DENSE_RANK() OVER (ORDER BY cars_small.consumption / 15 ASC)-1 AS Rankcars_smallconsumption, DENSE_RANK() OVER (ORDER BY cars_small.doors DESC)-1 AS Rankcars_smalldoors , cars_small.price,cars_small.mileage,cars_small.horsepower,cars_small.enginesize,cars_small.consumption,cars_small.doors,colors.name,fuels.name,bodies.name,cars_small.title,makes.name,conditions.name FROM cars_small LEFT OUTER JOIN colors ON cars_small.color_id = colors.ID LEFT OUTER JOIN fuels ON cars_small.fuel_id = fuels.ID LEFT OUTER JOIN bodies ON cars_small.body_id = bodies.ID LEFT OUTER JOIN makes ON cars_small.make_id = makes.ID LEFT OUTER JOIN conditions ON cars_small.condition_id = conditions.ID', 'LOW;LOW;LOW;LOW;LOW;LOW', 0, 'SELECT  MAX(Rankcars_smallprice), MAX(Rankcars_smallmileage), MAX(Rankcars_smallhorsepower), MAX(Rankcars_smallenginesize), MAX(Rankcars_smallconsumption), MAX(Rankcars_smalldoors) FROM (SELECT  DENSE_RANK() OVER (ORDER BY cars_small.price / 3000 ASC)-1 AS Rankcars_smallprice, DENSE_RANK() OVER (ORDER BY cars_small.mileage / 20000 ASC)-1 AS Rankcars_smallmileage, DENSE_RANK() OVER (ORDER BY cars_small.horsepower / 20 DESC)-1 AS Rankcars_smallhorsepower, DENSE_RANK() OVER (ORDER BY cars_small.enginesize / 1000 DESC)-1 AS Rankcars_smallenginesize, DENSE_RANK() OVER (ORDER BY cars_small.consumption / 15 ASC)-1 AS Rankcars_smallconsumption, DENSE_RANK() OVER (ORDER BY cars_small.doors DESC)-1 AS Rankcars_smalldoors FROM cars_small LEFT OUTER JOIN colors ON cars_small.color_id = colors.ID LEFT OUTER JOIN fuels ON cars_small.fuel_id = fuels.ID LEFT OUTER JOIN bodies ON cars_small.body_id = bodies.ID LEFT OUTER JOIN makes ON cars_small.make_id = makes.ID LEFT OUTER JOIN conditions ON cars_small.condition_id = conditions.ID) MyQuery']]>
    </parsePreferenceSQLSkylineHexagonExpectedResult>
    <parsePreferenceSQLSkylineDQExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineDQ 'SELECT  CAST(cars_small.price / 3000 AS bigint) AS SkylineAttribute0, CAST(cars_small.mileage / 20000 AS bigint) AS SkylineAttribute1, CAST(cars_small.horsepower / 20 * -1 AS bigint) AS SkylineAttribute2, CAST(cars_small.enginesize / 1000 * -1 AS bigint) AS SkylineAttribute3, CAST(cars_small.consumption / 15 AS bigint) AS SkylineAttribute4, CAST(cars_small.doors * -1 AS bigint) AS SkylineAttribute5 , cars_small.price,cars_small.mileage,cars_small.horsepower,cars_small.enginesize,cars_small.consumption,cars_small.doors,colors.name,fuels.name,bodies.name,cars_small.title,makes.name,conditions.name FROM cars_small LEFT OUTER JOIN colors ON cars_small.color_id = colors.ID LEFT OUTER JOIN fuels ON cars_small.fuel_id = fuels.ID LEFT OUTER JOIN bodies ON cars_small.body_id = bodies.ID LEFT OUTER JOIN makes ON cars_small.make_id = makes.ID LEFT OUTER JOIN conditions ON cars_small.condition_id = conditions.ID', 'LOW;LOW;LOW;LOW;LOW;LOW',0]]>
    </parsePreferenceSQLSkylineDQExpectedResult>
    <parsePreferenceSQLMultipleSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_MultipleSkylineBNL 'SELECT  CAST(cars_small.price / 3000 AS bigint) AS SkylineAttribute0, CAST(cars_small.mileage / 20000 AS bigint) AS SkylineAttribute1, CAST(cars_small.horsepower / 20 * -1 AS bigint) AS SkylineAttribute2, CAST(cars_small.enginesize / 1000 * -1 AS bigint) AS SkylineAttribute3, CAST(cars_small.consumption / 15 AS bigint) AS SkylineAttribute4, CAST(cars_small.doors * -1 AS bigint) AS SkylineAttribute5 , cars_small.price,cars_small.mileage,cars_small.horsepower,cars_small.enginesize,cars_small.consumption,cars_small.doors,colors.name,fuels.name,bodies.name,cars_small.title,makes.name,conditions.name FROM cars_small LEFT OUTER JOIN colors ON cars_small.color_id = colors.ID LEFT OUTER JOIN fuels ON cars_small.fuel_id = fuels.ID LEFT OUTER JOIN bodies ON cars_small.body_id = bodies.ID LEFT OUTER JOIN makes ON cars_small.make_id = makes.ID LEFT OUTER JOIN conditions ON cars_small.condition_id = conditions.ID ORDER BY cars_small.price / 3000, cars_small.mileage / 20000, cars_small.horsepower / 20 * -1, cars_small.enginesize / 1000 * -1, cars_small.consumption / 15, cars_small.doors * -1', 'LOW;LOW;LOW;LOW;LOW;LOW', 0, 3]]>
    </parsePreferenceSQLMultipleSkylineBNLExpectedResult>
  </TestDataRow>
  <TestDataRow>
    <comment>1 numerical preferences with TOP Keyword</comment>
    <skylineSQL>
      <![CDATA[  SELECT   TOP   5    t1.title FROM cars_small t1 SKYLINE OF t1.price LOW]]>
    </skylineSQL>
    <parsePreferenceSQLSkylineSQLExpectedResult>
      <![CDATA[SELECT   TOP   5    t1.title FROM cars_small t1 WHERE NOT EXISTS(SELECT      t1_INNER.title FROM cars_small t1_INNER WHERE t1_INNER.price <= t1.price AND ( t1_INNER.price < t1.price) ) ]]>
    </parsePreferenceSQLSkylineSQLExpectedResult>
    <parsePreferenceSQLSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLLevel 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0 ,      t1.title FROM cars_small t1', 'LOW', 5]]>
    </parsePreferenceSQLSkylineBNLExpectedResult>
    <parsePreferenceSQLSkylineBNLSortExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLSortLevel 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0 ,      t1.title FROM cars_small t1 ORDER BY t1.price', 'LOW', 5]]>
    </parsePreferenceSQLSkylineBNLSortExpectedResult>
    <parsePreferenceSQLSkylineHexagonExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineHexagonLevel 'SELECT  DENSE_RANK() OVER (ORDER BY t1.price ASC)-1 AS Rankt1price ,      t1.title FROM cars_small t1', 'LOW', 5, 'SELECT  MAX(Rankt1price) FROM (SELECT  DENSE_RANK() OVER (ORDER BY t1.price ASC)-1 AS Rankt1price FROM cars_small t1) MyQuery']]>
    </parsePreferenceSQLSkylineHexagonExpectedResult>
    <parsePreferenceSQLSkylineDQExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineDQ 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0 ,      t1.title FROM cars_small t1', 'LOW',5]]>
    </parsePreferenceSQLSkylineDQExpectedResult>
    <parsePreferenceSQLMultipleSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_MultipleSkylineBNL 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0 ,      t1.title FROM cars_small t1 ORDER BY t1.price', 'LOW', 5, 3]]>
    </parsePreferenceSQLMultipleSkylineBNLExpectedResult>
  </TestDataRow>
  <TestDataRow>
    <comment>3 numerical preferences with TOP Keyword</comment>
    <skylineSQL>
      <![CDATA[SELECT TOP 5 t1.title FROM cars_small t1 SKYLINE OF t1.price LOW, t1.mileage LOW, t1.horsepower HIGH]]>
    </skylineSQL>
    <parsePreferenceSQLSkylineSQLExpectedResult>
      <![CDATA[SELECT TOP 5 t1.title FROM cars_small t1 WHERE NOT EXISTS(SELECT t1_INNER.title FROM cars_small t1_INNER WHERE t1_INNER.price <= t1.price AND t1_INNER.mileage <= t1.mileage AND t1_INNER.horsepower * -1 <= t1.horsepower * -1 AND ( t1_INNER.price < t1.price OR t1_INNER.mileage < t1.mileage OR t1_INNER.horsepower * -1 < t1.horsepower * -1) ) ]]>
    </parsePreferenceSQLSkylineSQLExpectedResult>
    <parsePreferenceSQLSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLLevel 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(t1.mileage AS bigint) AS SkylineAttribute1, CAST(t1.horsepower * -1 AS bigint) AS SkylineAttribute2 , t1.title FROM cars_small t1', 'LOW;LOW;LOW', 5]]>
    </parsePreferenceSQLSkylineBNLExpectedResult>
    <parsePreferenceSQLSkylineBNLSortExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLSortLevel 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(t1.mileage AS bigint) AS SkylineAttribute1, CAST(t1.horsepower * -1 AS bigint) AS SkylineAttribute2 , t1.title FROM cars_small t1 ORDER BY t1.price, t1.mileage, t1.horsepower * -1', 'LOW;LOW;LOW', 5]]>
    </parsePreferenceSQLSkylineBNLSortExpectedResult>
    <parsePreferenceSQLSkylineHexagonExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineHexagonLevel 'SELECT  DENSE_RANK() OVER (ORDER BY t1.price ASC)-1 AS Rankt1price, DENSE_RANK() OVER (ORDER BY t1.mileage ASC)-1 AS Rankt1mileage, DENSE_RANK() OVER (ORDER BY t1.horsepower DESC)-1 AS Rankt1horsepower , t1.title FROM cars_small t1', 'LOW;LOW;LOW', 5, 'SELECT  MAX(Rankt1price), MAX(Rankt1mileage), MAX(Rankt1horsepower) FROM (SELECT  DENSE_RANK() OVER (ORDER BY t1.price ASC)-1 AS Rankt1price, DENSE_RANK() OVER (ORDER BY t1.mileage ASC)-1 AS Rankt1mileage, DENSE_RANK() OVER (ORDER BY t1.horsepower DESC)-1 AS Rankt1horsepower FROM cars_small t1) MyQuery']]>
    </parsePreferenceSQLSkylineHexagonExpectedResult>
    <parsePreferenceSQLSkylineDQExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineDQ 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(t1.mileage AS bigint) AS SkylineAttribute1, CAST(t1.horsepower * -1 AS bigint) AS SkylineAttribute2 , t1.title FROM cars_small t1', 'LOW;LOW;LOW',5]]>
    </parsePreferenceSQLSkylineDQExpectedResult>
    <parsePreferenceSQLMultipleSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_MultipleSkylineBNL 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(t1.mileage AS bigint) AS SkylineAttribute1, CAST(t1.horsepower * -1 AS bigint) AS SkylineAttribute2 , t1.title FROM cars_small t1 ORDER BY t1.price, t1.mileage, t1.horsepower * -1', 'LOW;LOW;LOW', 5, 3]]>
    </parsePreferenceSQLMultipleSkylineBNLExpectedResult>
  </TestDataRow>
  <TestDataRow>
    <comment>OTHERS EQUAL at the end</comment>
    <skylineSQL>
      <![CDATA[SELECT t1.id, t1.title AS AutoTitel, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID SKYLINE OF t1.price LOW, colors.name ('red' >> 'blue' >> OTHERS EQUAL)]]>
    </skylineSQL>
    <parsePreferenceSQLSkylineSQLExpectedResult>
      <![CDATA[SELECT t1.id, t1.title AS AutoTitel, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE NOT EXISTS(SELECT t1_INNER.id, t1_INNER.title AS AutoTitel, t1_INNER.price, t1_INNER.mileage, colors_INNER.name FROM cars_small t1_INNER LEFT OUTER JOIN colors colors_INNER ON t1_INNER.color_id = colors_INNER.ID WHERE t1_INNER.price <= t1.price AND (CASE WHEN colors_INNER.name = 'red' THEN 0 WHEN colors_INNER.name = 'blue' THEN 100 ELSE 200 END <= CASE WHEN colors.name = 'red' THEN 0 WHEN colors.name = 'blue' THEN 100 ELSE 200 END OR colors_INNER.name = colors.name) AND ( t1_INNER.price < t1.price OR CASE WHEN colors_INNER.name = 'red' THEN 0 WHEN colors_INNER.name = 'blue' THEN 100 ELSE 200 END < CASE WHEN colors.name = 'red' THEN 0 WHEN colors.name = 'blue' THEN 100 ELSE 200 END) ) ]]>
    </parsePreferenceSQLSkylineSQLExpectedResult>
    <parsePreferenceSQLSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLLevel 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 100 ELSE 200 END AS bigint) AS SkylineAttribute1 , t1.id, t1.title AS AutoTitel, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID', 'LOW;LOW', 0]]>
    </parsePreferenceSQLSkylineBNLExpectedResult>
    <parsePreferenceSQLSkylineBNLSortExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLSortLevel 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 100 ELSE 200 END AS bigint) AS SkylineAttribute1 , t1.id, t1.title AS AutoTitel, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID ORDER BY t1.price, CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 100 ELSE 200 END', 'LOW;LOW', 0]]>
    </parsePreferenceSQLSkylineBNLSortExpectedResult>
    <parsePreferenceSQLSkylineHexagonExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineHexagonLevel 'SELECT  DENSE_RANK() OVER (ORDER BY t1.price ASC)-1 AS Rankt1price, DENSE_RANK() OVER (ORDER BY CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 100 ELSE 200 END)-1 AS Rankcolorsname , t1.id, t1.title AS AutoTitel, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID', 'LOW;LOW', 0, 'SELECT  MAX(Rankt1price), MAX(Rankcolorsname) FROM (SELECT  DENSE_RANK() OVER (ORDER BY t1.price ASC)-1 AS Rankt1price, DENSE_RANK() OVER (ORDER BY CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 100 ELSE 200 END)-1 AS Rankcolorsname FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID) MyQuery']]>
    </parsePreferenceSQLSkylineHexagonExpectedResult>
    <parsePreferenceSQLSkylineDQExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineDQ 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 100 ELSE 200 END AS bigint) AS SkylineAttribute1 , t1.id, t1.title AS AutoTitel, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID', 'LOW;LOW',0]]>
    </parsePreferenceSQLSkylineDQExpectedResult>
    <parsePreferenceSQLMultipleSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_MultipleSkylineBNL 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 100 ELSE 200 END AS bigint) AS SkylineAttribute1 , t1.id, t1.title AS AutoTitel, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID ORDER BY t1.price, CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 100 ELSE 200 END', 'LOW;LOW', 0, 3]]>
    </parsePreferenceSQLMultipleSkylineBNLExpectedResult>
  </TestDataRow>
  <TestDataRow>
    <comment>OTHERS EQUAL at the beginning</comment>
    <skylineSQL>
      <![CDATA[SELECT t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID SKYLINE OF t1.price LOW, colors.name (OTHERS EQUAL >> 'blue')]]>
    </skylineSQL>
    <parsePreferenceSQLSkylineSQLExpectedResult>
      <![CDATA[SELECT t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE NOT EXISTS(SELECT t1_INNER.id, t1_INNER.title, t1_INNER.price, t1_INNER.mileage, colors_INNER.name FROM cars_small t1_INNER LEFT OUTER JOIN colors colors_INNER ON t1_INNER.color_id = colors_INNER.ID WHERE t1_INNER.price <= t1.price AND (CASE WHEN colors_INNER.name = 'blue' THEN 100 ELSE 0 END <= CASE WHEN colors.name = 'blue' THEN 100 ELSE 0 END OR colors_INNER.name = colors.name) AND ( t1_INNER.price < t1.price OR CASE WHEN colors_INNER.name = 'blue' THEN 100 ELSE 0 END < CASE WHEN colors.name = 'blue' THEN 100 ELSE 0 END) ) ]]>
    </parsePreferenceSQLSkylineSQLExpectedResult>
    <parsePreferenceSQLSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLLevel 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''blue'' THEN 100 ELSE 0 END AS bigint) AS SkylineAttribute1 , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID', 'LOW;LOW', 0]]>
    </parsePreferenceSQLSkylineBNLExpectedResult>
    <parsePreferenceSQLSkylineBNLSortExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLSortLevel 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''blue'' THEN 100 ELSE 0 END AS bigint) AS SkylineAttribute1 , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID ORDER BY t1.price, CASE WHEN colors.name = ''blue'' THEN 100 ELSE 0 END', 'LOW;LOW', 0]]>
    </parsePreferenceSQLSkylineBNLSortExpectedResult>
    <parsePreferenceSQLSkylineHexagonExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineHexagonLevel 'SELECT  DENSE_RANK() OVER (ORDER BY t1.price ASC)-1 AS Rankt1price, DENSE_RANK() OVER (ORDER BY CASE WHEN colors.name = ''blue'' THEN 100 ELSE 0 END)-1 AS Rankcolorsname , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID', 'LOW;LOW', 0, 'SELECT  MAX(Rankt1price), MAX(Rankcolorsname) FROM (SELECT  DENSE_RANK() OVER (ORDER BY t1.price ASC)-1 AS Rankt1price, DENSE_RANK() OVER (ORDER BY CASE WHEN colors.name = ''blue'' THEN 100 ELSE 0 END)-1 AS Rankcolorsname FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID) MyQuery']]>
    </parsePreferenceSQLSkylineHexagonExpectedResult>
    <parsePreferenceSQLSkylineDQExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineDQ 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''blue'' THEN 100 ELSE 0 END AS bigint) AS SkylineAttribute1 , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID', 'LOW;LOW',0]]>
    </parsePreferenceSQLSkylineDQExpectedResult>
    <parsePreferenceSQLMultipleSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_MultipleSkylineBNL 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''blue'' THEN 100 ELSE 0 END AS bigint) AS SkylineAttribute1 , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID ORDER BY t1.price, CASE WHEN colors.name = ''blue'' THEN 100 ELSE 0 END', 'LOW;LOW', 0, 3]]>
    </parsePreferenceSQLMultipleSkylineBNLExpectedResult>
  </TestDataRow>
  <TestDataRow>
    <comment>OTHERS EQUAL in the middle</comment>
    <skylineSQL>
      <![CDATA[SELECT t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID SKYLINE OF t1.price LOW, colors.name ('red' >> OTHERS EQUAL >> 'blue')]]>
    </skylineSQL>
    <parsePreferenceSQLSkylineSQLExpectedResult>
      <![CDATA[SELECT t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE NOT EXISTS(SELECT t1_INNER.id, t1_INNER.title, t1_INNER.price, t1_INNER.mileage, colors_INNER.name FROM cars_small t1_INNER LEFT OUTER JOIN colors colors_INNER ON t1_INNER.color_id = colors_INNER.ID WHERE t1_INNER.price <= t1.price AND (CASE WHEN colors_INNER.name = 'red' THEN 0 WHEN colors_INNER.name = 'blue' THEN 200 ELSE 100 END <= CASE WHEN colors.name = 'red' THEN 0 WHEN colors.name = 'blue' THEN 200 ELSE 100 END OR colors_INNER.name = colors.name) AND ( t1_INNER.price < t1.price OR CASE WHEN colors_INNER.name = 'red' THEN 0 WHEN colors_INNER.name = 'blue' THEN 200 ELSE 100 END < CASE WHEN colors.name = 'red' THEN 0 WHEN colors.name = 'blue' THEN 200 ELSE 100 END) ) ]]>
    </parsePreferenceSQLSkylineSQLExpectedResult>
    <parsePreferenceSQLSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLLevel 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 200 ELSE 100 END AS bigint) AS SkylineAttribute1 , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID', 'LOW;LOW', 0]]>
    </parsePreferenceSQLSkylineBNLExpectedResult>
    <parsePreferenceSQLSkylineBNLSortExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLSortLevel 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 200 ELSE 100 END AS bigint) AS SkylineAttribute1 , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID ORDER BY t1.price, CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 200 ELSE 100 END', 'LOW;LOW', 0]]>
    </parsePreferenceSQLSkylineBNLSortExpectedResult>
    <parsePreferenceSQLSkylineHexagonExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineHexagonLevel 'SELECT  DENSE_RANK() OVER (ORDER BY t1.price ASC)-1 AS Rankt1price, DENSE_RANK() OVER (ORDER BY CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 200 ELSE 100 END)-1 AS Rankcolorsname , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID', 'LOW;LOW', 0, 'SELECT  MAX(Rankt1price), MAX(Rankcolorsname) FROM (SELECT  DENSE_RANK() OVER (ORDER BY t1.price ASC)-1 AS Rankt1price, DENSE_RANK() OVER (ORDER BY CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 200 ELSE 100 END)-1 AS Rankcolorsname FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID) MyQuery']]>
    </parsePreferenceSQLSkylineHexagonExpectedResult>
    <parsePreferenceSQLSkylineDQExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineDQ 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 200 ELSE 100 END AS bigint) AS SkylineAttribute1 , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID', 'LOW;LOW',0]]>
    </parsePreferenceSQLSkylineDQExpectedResult>
    <parsePreferenceSQLMultipleSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_MultipleSkylineBNL 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 200 ELSE 100 END AS bigint) AS SkylineAttribute1 , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID ORDER BY t1.price, CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 200 ELSE 100 END', 'LOW;LOW', 0, 3]]>
    </parsePreferenceSQLMultipleSkylineBNLExpectedResult>
  </TestDataRow>
  <TestDataRow>
    <comment>OTHERS INCOMPARABLE at the end</comment>
    <skylineSQL>
      <![CDATA[SELECT t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000 SKYLINE OF t1.price LOW, colors.name ('red' >> 'blue' >> OTHERS INCOMPARABLE)]]>
    </skylineSQL>
    <parsePreferenceSQLSkylineSQLExpectedResult>
      <![CDATA[SELECT t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000 AND NOT EXISTS(SELECT t1_INNER.id, t1_INNER.title, t1_INNER.price, t1_INNER.mileage, colors_INNER.name FROM cars_small t1_INNER LEFT OUTER JOIN colors colors_INNER ON t1_INNER.color_id = colors_INNER.ID WHERE t1_INNER.price < 10000  AND t1_INNER.price <= t1.price AND (CASE WHEN colors_INNER.name = 'red' THEN 0 WHEN colors_INNER.name = 'blue' THEN 100 ELSE 201 END <= CASE WHEN colors.name = 'red' THEN 0 WHEN colors.name = 'blue' THEN 100 ELSE 200 END OR colors_INNER.name = colors.name) AND ( t1_INNER.price < t1.price OR CASE WHEN colors_INNER.name = 'red' THEN 0 WHEN colors_INNER.name = 'blue' THEN 100 ELSE 201 END < CASE WHEN colors.name = 'red' THEN 0 WHEN colors.name = 'blue' THEN 100 ELSE 200 END) )]]>
    </parsePreferenceSQLSkylineSQLExpectedResult>
    <parsePreferenceSQLSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNL 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 100 ELSE 200 END AS bigint) AS SkylineAttribute1, CASE WHEN colors.name = ''red'' THEN '''' WHEN colors.name = ''blue'' THEN '''' ELSE colors.name END , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000', 'LOW;LOW;INCOMPARABLE', 0]]>
    </parsePreferenceSQLSkylineBNLExpectedResult>
    <parsePreferenceSQLSkylineBNLSortExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLSort 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 100 ELSE 200 END AS bigint) AS SkylineAttribute1, CASE WHEN colors.name = ''red'' THEN '''' WHEN colors.name = ''blue'' THEN '''' ELSE colors.name END , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000 ORDER BY t1.price, CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 100 ELSE 200 END', 'LOW;LOW;INCOMPARABLE', 0]]>
    </parsePreferenceSQLSkylineBNLSortExpectedResult>
    <parsePreferenceSQLSkylineHexagonExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineHexagon 'SELECT  DENSE_RANK() OVER (ORDER BY t1.price ASC)-1 AS Rankt1price, DENSE_RANK() OVER (ORDER BY CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 100 ELSE 200 END)-1 AS Rankcolorsname, CALCULATEINCOMPARABLE , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000', 'LOW;LOW;CALCULATEINCOMPARABLE', 0, 'SELECT  MAX(Rankt1price), MAX(Rankcolorsname)CALCULATEINCOMPARABLE FROM (SELECT  DENSE_RANK() OVER (ORDER BY t1.price ASC)-1 AS Rankt1price, DENSE_RANK() OVER (ORDER BY CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 100 ELSE 200 END)-1 AS Rankcolorsname FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000) MyQuery', 'CASE WHEN colors.name = ''red'' THEN '''' WHEN colors.name = ''blue'' THEN '''' ELSE colors.name END',2]]>
    </parsePreferenceSQLSkylineHexagonExpectedResult>
    <parsePreferenceSQLSkylineDQExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineDQ 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 100 ELSE 200 END AS bigint) AS SkylineAttribute1, CASE WHEN colors.name = ''red'' THEN '''' WHEN colors.name = ''blue'' THEN '''' ELSE colors.name END , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000', 'LOW;LOW;INCOMPARABLE',0]]>
    </parsePreferenceSQLSkylineDQExpectedResult>
    <parsePreferenceSQLMultipleSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_MultipleSkylineBNL 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 100 ELSE 200 END AS bigint) AS SkylineAttribute1, CASE WHEN colors.name = ''red'' THEN '''' WHEN colors.name = ''blue'' THEN '''' ELSE colors.name END , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000 ORDER BY t1.price, CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 100 ELSE 200 END', 'LOW;LOW;INCOMPARABLE', 0, 3]]>
    </parsePreferenceSQLMultipleSkylineBNLExpectedResult>
  </TestDataRow>
  <TestDataRow>
    <comment>OTHERS INCOMPARABLE at the beginning</comment>
    <skylineSQL>
      <![CDATA[SELECT t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000 SKYLINE OF t1.price LOW, colors.name (OTHERS INCOMPARABLE >> 'blue' >> 'red')]]>
    </skylineSQL>
    <parsePreferenceSQLSkylineSQLExpectedResult>
      <![CDATA[SELECT t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000 AND NOT EXISTS(SELECT t1_INNER.id, t1_INNER.title, t1_INNER.price, t1_INNER.mileage, colors_INNER.name FROM cars_small t1_INNER LEFT OUTER JOIN colors colors_INNER ON t1_INNER.color_id = colors_INNER.ID WHERE t1_INNER.price < 10000  AND t1_INNER.price <= t1.price AND (CASE WHEN colors_INNER.name = 'blue' THEN 100 WHEN colors_INNER.name = 'red' THEN 200 ELSE 1 END <= CASE WHEN colors.name = 'blue' THEN 100 WHEN colors.name = 'red' THEN 200 ELSE 0 END OR colors_INNER.name = colors.name) AND ( t1_INNER.price < t1.price OR CASE WHEN colors_INNER.name = 'blue' THEN 100 WHEN colors_INNER.name = 'red' THEN 200 ELSE 1 END < CASE WHEN colors.name = 'blue' THEN 100 WHEN colors.name = 'red' THEN 200 ELSE 0 END) )]]>
    </parsePreferenceSQLSkylineSQLExpectedResult>
    <parsePreferenceSQLSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNL 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''blue'' THEN 100 WHEN colors.name = ''red'' THEN 200 ELSE 0 END AS bigint) AS SkylineAttribute1, CASE WHEN colors.name = ''blue'' THEN '''' WHEN colors.name = ''red'' THEN '''' ELSE colors.name END , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000', 'LOW;LOW;INCOMPARABLE', 0]]>
    </parsePreferenceSQLSkylineBNLExpectedResult>
    <parsePreferenceSQLSkylineBNLSortExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLSort 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''blue'' THEN 100 WHEN colors.name = ''red'' THEN 200 ELSE 0 END AS bigint) AS SkylineAttribute1, CASE WHEN colors.name = ''blue'' THEN '''' WHEN colors.name = ''red'' THEN '''' ELSE colors.name END , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000 ORDER BY t1.price, CASE WHEN colors.name = ''blue'' THEN 100 WHEN colors.name = ''red'' THEN 200 ELSE 0 END', 'LOW;LOW;INCOMPARABLE', 0]]>
    </parsePreferenceSQLSkylineBNLSortExpectedResult>
    <parsePreferenceSQLSkylineHexagonExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineHexagon 'SELECT  DENSE_RANK() OVER (ORDER BY t1.price ASC)-1 AS Rankt1price, DENSE_RANK() OVER (ORDER BY CASE WHEN colors.name = ''blue'' THEN 100 WHEN colors.name = ''red'' THEN 200 ELSE 0 END)-1 AS Rankcolorsname, CALCULATEINCOMPARABLE , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000', 'LOW;LOW;CALCULATEINCOMPARABLE', 0, 'SELECT  MAX(Rankt1price), MAX(Rankcolorsname)CALCULATEINCOMPARABLE FROM (SELECT  DENSE_RANK() OVER (ORDER BY t1.price ASC)-1 AS Rankt1price, DENSE_RANK() OVER (ORDER BY CASE WHEN colors.name = ''blue'' THEN 100 WHEN colors.name = ''red'' THEN 200 ELSE 0 END)-1 AS Rankcolorsname FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000) MyQuery', 'CASE WHEN colors.name = ''blue'' THEN '''' WHEN colors.name = ''red'' THEN '''' ELSE colors.name END',0]]>
    </parsePreferenceSQLSkylineHexagonExpectedResult>
    <parsePreferenceSQLSkylineDQExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineDQ 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''blue'' THEN 100 WHEN colors.name = ''red'' THEN 200 ELSE 0 END AS bigint) AS SkylineAttribute1, CASE WHEN colors.name = ''blue'' THEN '''' WHEN colors.name = ''red'' THEN '''' ELSE colors.name END , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000', 'LOW;LOW;INCOMPARABLE',0]]>
    </parsePreferenceSQLSkylineDQExpectedResult>
    <parsePreferenceSQLMultipleSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_MultipleSkylineBNL 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''blue'' THEN 100 WHEN colors.name = ''red'' THEN 200 ELSE 0 END AS bigint) AS SkylineAttribute1, CASE WHEN colors.name = ''blue'' THEN '''' WHEN colors.name = ''red'' THEN '''' ELSE colors.name END , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000 ORDER BY t1.price, CASE WHEN colors.name = ''blue'' THEN 100 WHEN colors.name = ''red'' THEN 200 ELSE 0 END', 'LOW;LOW;INCOMPARABLE', 0, 3]]>
    </parsePreferenceSQLMultipleSkylineBNLExpectedResult>
  </TestDataRow>
  <TestDataRow>
    <comment>OTHERS INCOMPARABLE in the middle</comment>
    <skylineSQL>
      <![CDATA[SELECT t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000 SKYLINE OF t1.price LOW, colors.name ('red' >>  OTHERS INCOMPARABLE >> 'blue')]]>
    </skylineSQL>
    <parsePreferenceSQLSkylineSQLExpectedResult>
      <![CDATA[SELECT t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000 AND NOT EXISTS(SELECT t1_INNER.id, t1_INNER.title, t1_INNER.price, t1_INNER.mileage, colors_INNER.name FROM cars_small t1_INNER LEFT OUTER JOIN colors colors_INNER ON t1_INNER.color_id = colors_INNER.ID WHERE t1_INNER.price < 10000  AND t1_INNER.price <= t1.price AND (CASE WHEN colors_INNER.name = 'red' THEN 0 WHEN colors_INNER.name = 'blue' THEN 200 ELSE 101 END <= CASE WHEN colors.name = 'red' THEN 0 WHEN colors.name = 'blue' THEN 200 ELSE 100 END OR colors_INNER.name = colors.name) AND ( t1_INNER.price < t1.price OR CASE WHEN colors_INNER.name = 'red' THEN 0 WHEN colors_INNER.name = 'blue' THEN 200 ELSE 101 END < CASE WHEN colors.name = 'red' THEN 0 WHEN colors.name = 'blue' THEN 200 ELSE 100 END) )]]>
    </parsePreferenceSQLSkylineSQLExpectedResult>
    <parsePreferenceSQLSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNL 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 200 ELSE 100 END AS bigint) AS SkylineAttribute1, CASE WHEN colors.name = ''red'' THEN '''' WHEN colors.name = ''blue'' THEN '''' ELSE colors.name END , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000', 'LOW;LOW;INCOMPARABLE', 0]]>
    </parsePreferenceSQLSkylineBNLExpectedResult>
    <parsePreferenceSQLSkylineBNLSortExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineBNLSort 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 200 ELSE 100 END AS bigint) AS SkylineAttribute1, CASE WHEN colors.name = ''red'' THEN '''' WHEN colors.name = ''blue'' THEN '''' ELSE colors.name END , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000 ORDER BY t1.price, CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 200 ELSE 100 END', 'LOW;LOW;INCOMPARABLE', 0]]>
    </parsePreferenceSQLSkylineBNLSortExpectedResult>
    <parsePreferenceSQLSkylineHexagonExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineHexagon 'SELECT  DENSE_RANK() OVER (ORDER BY t1.price ASC)-1 AS Rankt1price, DENSE_RANK() OVER (ORDER BY CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 200 ELSE 100 END)-1 AS Rankcolorsname, CALCULATEINCOMPARABLE , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000', 'LOW;LOW;CALCULATEINCOMPARABLE', 0, 'SELECT  MAX(Rankt1price), MAX(Rankcolorsname)CALCULATEINCOMPARABLE FROM (SELECT  DENSE_RANK() OVER (ORDER BY t1.price ASC)-1 AS Rankt1price, DENSE_RANK() OVER (ORDER BY CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 200 ELSE 100 END)-1 AS Rankcolorsname FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000) MyQuery', 'CASE WHEN colors.name = ''red'' THEN '''' WHEN colors.name = ''blue'' THEN '''' ELSE colors.name END',1]]>
    </parsePreferenceSQLSkylineHexagonExpectedResult>
    <parsePreferenceSQLSkylineDQExpectedResult>
      <![CDATA[EXEC dbo.SP_SkylineDQ 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 200 ELSE 100 END AS bigint) AS SkylineAttribute1, CASE WHEN colors.name = ''red'' THEN '''' WHEN colors.name = ''blue'' THEN '''' ELSE colors.name END , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000', 'LOW;LOW;INCOMPARABLE',0]]>
    </parsePreferenceSQLSkylineDQExpectedResult>
    <parsePreferenceSQLMultipleSkylineBNLExpectedResult>
      <![CDATA[EXEC dbo.SP_MultipleSkylineBNL 'SELECT  CAST(t1.price AS bigint) AS SkylineAttribute0, CAST(CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 200 ELSE 100 END AS bigint) AS SkylineAttribute1, CASE WHEN colors.name = ''red'' THEN '''' WHEN colors.name = ''blue'' THEN '''' ELSE colors.name END , t1.id, t1.title, t1.price, t1.mileage, colors.name FROM cars_small t1 LEFT OUTER JOIN colors ON t1.color_id = colors.ID WHERE t1.price < 10000 ORDER BY t1.price, CASE WHEN colors.name = ''red'' THEN 0 WHEN colors.name = ''blue'' THEN 200 ELSE 100 END', 'LOW;LOW;INCOMPARABLE', 0, 3]]>
    </parsePreferenceSQLMultipleSkylineBNLExpectedResult>
  </TestDataRow>
</TestData>